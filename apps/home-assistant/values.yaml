image:
  repository: ghcr.io/home-assistant/home-assistant

env:
  TZ: UTC

priorityClassName: critical

resources:
  requests:
    cpu: 100m
    memory: 500Mi
  limits:
    cpu: 500m
    memory: 750Mi

affinity:
  nodeAffinity:
    # This is required for the homekit bridge
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: lucyscrib.com/mdns-reflector
              operator: Exists

persistence:
  config:
    enabled: true
    mountPath: /config
    size: 1Gi
  configuration:
    enabled: true
    mountPath: /config/configuration.yaml
    readOnly: true
    type: configMap
    name: home-assistant-configuration
    subPath: configuration.yaml
  static-config:
    enabled: true
    mountPath: /config/static-config
    readOnly: true
    type: configMap
    name: static-config
  secrets:
    enabled: true
    mountPath: /config/secrets.yaml
    readOnly: true
    type: secret
    name: home-assistant-secrets
    subPath: secrets.yaml
  blueprints-automation:
    enabled: true
    mountPath: /config/blueprints/automation/custom
    readOnly: true
    type: configMap
    name: blueprints-automation
  dbus:
    enabled: true
    mountPath: /run/dbus
    readOnly: true
    type: hostPath
    hostPath: /run/dbus

configmap:
  configuration:
    enabled: true
    data:
      configuration.yaml: |
        default_config:

        http:
          use_x_forwarded_for: true
          trusted_proxies:
            - 10.42.0.0/16

        # Managed via UI
        automation: !include automations.yaml
        scene: !include scenes.yaml
        script: !include scripts.yaml

        # Managed via gitops
        alarm_control_panel: !include static-config/alarm_control_panel.yaml
        automation static: !include static-config/automations.yaml
        homekit: !include static-config/homekit.yaml
        input_number: !include static-config/input_number.yaml
        logger: !include static-config/logger.yaml
        notify: !include static-config/notify.yaml
        rest_command: !include static-config/rest_command.yaml
        template: !include static-config/templates.yaml

yamlConfigFiles:
  static-config:
    files:
      alarm_control_panel: |
        - platform: manual
          name: Home Alarm
          code_template: "{{ states('input_text.home_alarm_code') }}"
          disarmed:
            trigger_time: 0
          armed_away:
            arming_time: 60
            delay_time: 30
          armed_home:
            arming_time: 0
            delay_time: 30
          armed_night:
            arming_time: 0
            delay_time: 0

      automations: |
        - id: tilt_green_brewers_friend_publish
          alias: Tilt Green Brewer's Friend Publish
          use_blueprint:
            path: custom/brewers_friend_publish.yaml
            input:
              fermenter_name: Green
              temperature_sensor: sensor.tilt_green_temperature
              specific_gravity_sensor: sensor.tilt_green_specific_gravity
              api_key: !secret brewers_friend_api_key

      homekit: |
        - name: Home Assistant Bridge
          port: 21063
          advertise_ip: 192.168.1.212

          filter:
            include_domains:
              - alarm_control_panel
              - climate
              - fan
              - light
              - lock
              - switch

      input_number: |
        electricity_cost:
          name: Electricity Cost
          min: 0
          max: 100
          step: 0.001
          mode: box
          unit_of_measurement: USD/kWh
          icon: mdi:currency-usd

      logger: |
        default: warning

      notify: |
        - platform: group
          name: battery
          services:
            - service: mobile_app_alex_s_pixel_6

        - platform: group
          name: security
          services:
            - service: mobile_app_alex_s_pixel_6

      rest_command: |
        brewers_friend_publish:
          url: "https://log.brewersfriend.com/stream/{{ api_key }}"
          method: POST
          content_type: "application/json; charset=utf-8"
          payload: |
            {
              "name": "HomeAssistant {{ fermenter_name }}",
              "report_source": "HomeAssistant",
              "temp": "{{ temperature }}",
              "temp_unit": "F",
              "gravity": "{{ specific_gravity }}",
              "gravity_unit": "G"
            }

        pagerduty_trigger:
          url: "https://events.pagerduty.com/v2/enqueue"
          method: POST
          content_type: "application/json; charset=utf-8"
          payload: |
            {
              "routing_key": "{{ pagerduty_routing_key }}",
              "event_action": "trigger",
              "dedup_key": "{{ alert_key }}",
              "payload": {
                "summary": "{{ summary }}",
                "severity": "{{ severity }}",
                "class": "{{ class }}",
                "group": "{{ group }}",
                "component": "{{ component }}",
                "source": "homeassistant.lucyscrib.com"
              }
            }

        pagerduty_resolve:
          url: "https://events.pagerduty.com/v2/enqueue"
          method: POST
          content_type: "application/json; charset=utf-8"
          payload: |
            {
              "routing_key": "{{ pagerduty_routing_key }}",
              "event_action": "resolve",
              "dedup_key": "{{ alert_key }}"
            }

        pagerduty_entity_trigger:
          url: "https://events.pagerduty.com/v2/enqueue"
          method: POST
          content_type: "application/json; charset=utf-8"
          payload: |
            {
              "routing_key": "{{ pagerduty_routing_key }}",
              "event_action": "trigger",
              "dedup_key": "{{ type }}:{{ entity_id }}",
              "payload": {
                "summary": "{{ summary }}",
                "severity": "{{ severity }}",
                "class": "{{ type }}",
                "group": "{{ area_name(entity_id) }}",
                "component": "{{ entity_id }}",
                "source": "homeassistant.lucyscrib.com"
              },
              "links": [
                {
                  "href": "https://homeassistant.lucyscrib.com/history?entity_id={{ entity_id }}",
                  "text": "{{ state_attr(entity_id, 'friendly_name') }}"
                }
              ]
            }

        pagerduty_entity_resolve:
          url: "https://events.pagerduty.com/v2/enqueue"
          method: POST
          content_type: "application/json; charset=utf-8"
          payload: |
            {
              "routing_key": "{{ pagerduty_routing_key }}",
              "event_action": "resolve",
              "dedup_key": "{{ type }}:{{ entity_id }}"
            }

      templates: |
        - binary_sensor:
          - name: ZWave Nodes Unhealthy
            device_class: problem
            state: >
              {{
                states |
                selectattr("entity_id", "search", "node_status") |
                selectattr('state', 'in', ['dead', 'unavailable', 'unknown']) |
                map(attribute='entity_id') |
                list |
                count
              }}

  blueprints-automation:
    files:
      brewers_friend_publish: |
        blueprint:
          domain: automation
          name: Brewer's Friend Publish
          description: Publish temperature and specific gravity data to Brewer's Friend
          input:
            fermenter_name:
              name: Fermenter Name
              description: The name that will appear for the device in Brewer's Friend
              selector:
                text:
            temperature_sensor:
              name: Temperature Sensor
              description: The sensor to get temperature data from
              selector:
                entity:
                  domain: sensor
                  device_class: temperature
            specific_gravity_sensor:
              name: Specific Gravity Sensor
              description: The sensor to get specific gravity data from
              selector:
                entity:
                  domain: sensor
            api_key:
              name: Brewer's Friend API Key
              description: The API key to use to authenticate with Brewer's Friend
              selector:
                text:

        variables:
          fermenter_name: !input fermenter_name
          temperature_sensor: !input temperature_sensor
          specific_gravity_sensor: !input specific_gravity_sensor
          api_key: !input api_key

        trigger:
          - platform: time_pattern
            minutes: "/20"

        condition:
          - condition: and
            conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: "{{ temperature_sensor }}"
                    state: unavailable
              - condition: not
                conditions:
                  - condition: state
                    entity_id: "{{ specific_gravity_sensor }}"
                    state: unavailable

        action:
          - service: rest_command.brewers_friend_publish
            data:
              api_key: "{{ api_key }}"
              fermenter_name: "{{ fermenter_name }}"
              temperature: "{{ states(temperature_sensor) }}"
              specific_gravity: "{{ states(specific_gravity_sensor) }}"

      pagerduty_state_alert: |
        blueprint:
          domain: automation
          name: PagerDuty State Alert
          description: Send a PagerDuty alert based on a state change
          input:
            entities:
              name: Entities
              description: Entities that will trigger the alert
              selector:
                entity:
                  multiple: true
            trigger_state:
              name: Trigger State
              description: State that will trigger the alert
              default: "on"
            resolve_state:
              name: Resolve State
              description: State that will resolve the alert
              default: "off"
            alert_message:
              name: Alert Message
              description: The message to display in the alert
            alert_severity:
              name: Alert Severity
              description: The severity level of the alert
              selector:
                select:
                  options:
                    - critical
                    - error
                    - warning
                    - info
            pagerduty_routing_key_entity_id:
              name: PagerDuty Routing Key
              description: Text entity containing the key of the PagerDuty integration to which to route the alerts
              selector:
                entity:
                  domain: input_text

        variables:
          resolve_state: !input resolve_state
          alert_message: !input alert_message
          pagerduty_routing_key_entity_id: !input pagerduty_routing_key_entity_id

        mode: parallel

        trigger:
          - platform: state
            entity_id: !input entities
            to: !input trigger_state

        action:
          - service: rest_command.pagerduty_entity_trigger
            data:
              pagerduty_routing_key: "{{ states(pagerduty_routing_key_entity_id) }}"
              entity_id: "{{ trigger.entity_id }}"
              type: "{{ state_attr(trigger.entity_id, 'device_class') }}"
              summary: "{{ alert_message }} via {{ state_attr(trigger.entity_id, 'friendly_name') }}"
              severity: !input alert_severity
          - wait_template: "{{ is_state(trigger.entity_id, resolve_state)}}"
            continue_on_timeout: false
          - service: rest_command.pagerduty_entity_resolve
            data:
              pagerduty_routing_key: "{{ states(pagerduty_routing_key_entity_id) }}"
              entity_id: "{{ trigger.entity_id }}"
              type: "{{ state_attr(trigger.entity_id, 'device_class') }}"

service:
  main:
    ports:
      http:
        port: 8123
  homekit-bridge:
    enabled: true
    type: LoadBalancer
    annotations:
      metallb.universe.tf/loadBalancerIPs: 192.168.1.212
    ports:
      homekit-bridge:
        enabled: true
        port: 21063
        protocol: TCP
      homekit-udp:
        enabled: true
        port: 5353
        protocol: TCP

ingress:
  main:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: lucys-crib-acme
    hosts:
      - host: homeassistant.lucyscrib.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - homeassistant.lucyscrib.com
        secretName: homeassistant-lucys-crib-cert-acme

onepassword:
  items:
    home-assistant-secrets:
      enabled: true
      item: home-assistant-secrets
