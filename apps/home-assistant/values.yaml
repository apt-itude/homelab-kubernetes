image:
  repository: ghcr.io/home-assistant/home-assistant

env:
  TZ: UTC

priorityClassName: critical

persistence:
  config:
    enabled: true
    mountPath: /config
    size: 1Gi
  configuration:
    enabled: true
    mountPath: /config/configuration.yaml
    readOnly: true
    type: configMap
    name: home-assistant-configuration
    subPath: configuration.yaml
  static-config:
    enabled: true
    mountPath: /config/static-config
    readOnly: true
    type: configMap
    name: static-config
  secrets:
    enabled: true
    mountPath: /config/secrets.yaml
    readOnly: true
    type: secret
    name: home-assistant-secrets
    subPath: secrets.yaml
  blueprints-automation:
    enabled: true
    mountPath: /config/blueprints/automation/custom
    readOnly: true
    type: configMap
    name: blueprints-automation

configmap:
  configuration:
    enabled: true
    data:
      configuration.yaml: |
        default_config:

        http:
          use_x_forwarded_for: true
          trusted_proxies:
            - 10.42.0.0/16

        automation: !include automations.yaml

        rest_command: !include static-config/rest_command.yaml

yamlConfigFiles:
  static-config:
    files:
      rest_command: |
        brewers_friend_publish:
          url: "https://log.brewersfriend.com/stream/{{ api_key }}"
          method: POST
          content_type: "application/json; charset=utf-8"
          payload: |
            {
              "name": "HomeAssistant {{ fermenter_name }}",
              "report_source": "HomeAssistant",
              "temp": "{{ temperature }}",
              "temp_unit": "F",
              "gravity": "{{ specific_gravity }}",
              "gravity_unit": "G"
            }

        pagerduty_trigger:
          url: "https://events.pagerduty.com/v2/enqueue"
          method: POST
          content_type: "application/json; charset=utf-8"
          payload: |
            {
              "routing_key": "{{ pagerduty_routing_key }}",
              "event_action": "trigger",
              "dedup_key": "{{ alert_key }}",
              "payload": {
                "summary": "{{ summary }}",
                "severity": "{{ severity }}",
                "class": "{{ class }}",
                "group": "{{ group }}",
                "component": "{{ component }}",
                "source": "homeassistant.lucyscrib.com"
              }
            }

        pagerduty_resolve:
          url: "https://events.pagerduty.com/v2/enqueue"
          method: POST
          content_type: "application/json; charset=utf-8"
          payload: |
            {
              "routing_key": "{{ pagerduty_routing_key }}",
              "event_action": "resolve",
              "dedup_key": "{{ alert_key }}"
            }

        pagerduty_entity_trigger:
          url: "https://events.pagerduty.com/v2/enqueue"
          method: POST
          content_type: "application/json; charset=utf-8"
          payload: |
            {
              "routing_key": "{{ pagerduty_routing_key }}",
              "event_action": "trigger",
              "dedup_key": "{{ type }}:{{ entity_id }}",
              "payload": {
                "summary": "{{ summary }}",
                "severity": "{{ severity }}",
                "class": "{{ type }}",
                "group": "{{ area_name(entity_id) }}",
                "component": "{{ entity_id }}",
                "source": "homeassistant.lucyscrib.com"
              },
              "links": [
                {
                  "href": "https://homeassistant.lucyscrib.com/history?entity_id={{ entity_id }}",
                  "text": "{{ state_attr(entity_id, 'friendly_name') }}"
                }
              ]
            }

        pagerduty_entity_resolve:
          url: "https://events.pagerduty.com/v2/enqueue"
          method: POST
          content_type: "application/json; charset=utf-8"
          payload: |
            {
              "routing_key": "{{ pagerduty_routing_key }}",
              "event_action": "resolve",
              "dedup_key": "{{ type }}:{{ entity_id }}"
            }

  blueprints-automation:
    files:
      binary_alert: |
        blueprint:
          domain: automation
          name: Binary Sensor Alert
          description: Send alert based on a binary sensor
          input:
            sensor:
              name: Sensor
              description: The sensor to trigger the alert
              selector:
                entity:
                  domain: binary_sensor
            alert_message:
              name: Alert Message
              description: The message to display in the alert
            alert_severity:
              name: Alert Severity
              description: The severity level of the alert
              selector:
                select:
                  options:
                    - critical
                    - error
                    - warning
                    - info
            clear_time:
              name: Clear Time
              description: The duration that the sensor must be off before clearing the alert
              selector:
                duration:
            pagerduty_routing_key:
              name: PagerDuty Routing Key
              description: The key of the PagerDuty integration to which to route the alerts
              default: ""
              selector:
                text:

        variables:
          entity_id: !input sensor
          alert_type: "{{ state_attr(entity_id, 'device_class') }}"

        trigger:
          - platform: state
            entity_id: !input sensor
            to: "on"

        action:
          - service: rest_command.pagerduty_entity_trigger
            data:
              pagerduty_routing_key: !input pagerduty_routing_key
              entity_id: !input sensor
              type: "{{ alert_type }}"
              summary: !input alert_message
              severity: !input alert_severity
          - wait_for_trigger:
              - platform: state
                entity_id:
                  - !input sensor
                to: "off"
                for: !input clear_time
            continue_on_timeout: false
          - service: rest_command.pagerduty_entity_resolve
            data:
              pagerduty_routing_key: !input pagerduty_routing_key
              entity_id: !input sensor
              type: "{{ alert_type }}"

service:
  main:
    ports:
      http:
        port: 8123

ingress:
  main:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: lucys-crib-acme
    hosts:
      - host: homeassistant.lucyscrib.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - homeassistant.lucyscrib.com
        secretName: homeassistant-lucys-crib-cert-acme

onepassword:
  items:
    home-assistant-secrets:
      enabled: true
      item: home-assistant-secrets
